<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aleksandar Bošnjak's portfolio - Aleksandar Bošnjak</title><link href="/" rel="alternate"></link><link href="/feeds/aleksandar-bosnjak.atom.xml" rel="self"></link><id>/</id><updated>2024-11-14T00:00:00+01:00</updated><entry><title>Linkter AI: Semantic internal linking</title><link href="/blog/linkter-ai-semantic-internal-linking/" rel="alternate"></link><published>2024-11-14T00:00:00+01:00</published><updated>2024-11-14T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-14:/blog/linkter-ai-semantic-internal-linking/</id><summary type="html">&lt;p&gt;Linkter is an advanced SaaS tool for building internal links within WordPress websites, leveraging cutting-edge AI and NLP technologies...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;Linkter is an advanced SaaS tool for building internal links within WordPress websites, leveraging cutting-edge AI and NLP technologies. Some of the challenges I've faced:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To ensure scalability, I implemented lambda parallelization within AWS Step Functions, enabling concurrent content analysis across multiple websites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For accurate link recommendations, I combined scikit-learn(sklearn) NLP models with custom preprocessing and domain-specific rules, significantly enhancing keywording accuracy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration with WordPress required developing a custom plugin supporting complex scenarios like Elementor updates, authenticated via WP app passwords.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security was paramount; I implemented Fernet encryption for sensitive data like OpenAI API keys and GSC tokens before server storage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deployment of sophisticated ML models necessitated custom bash scripts for EC2 instances, overcoming Lambda layer limitations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyzing website data in close to real-time requires lots of engineering compromises.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="projects"></category><category term="Artificial Intelligence"></category><category term="Machine Learning"></category><category term="Pytorch"></category><category term="Python"></category><category term="PostgreSQL"></category><category term="AWS Lambda"></category><category term="AWS RDS"></category><category term="AWS DynamoDB"></category><category term="Flask"></category><category term="Terraform"></category><category term="PythonSQLAlchemy"></category><category term="Microservices"></category><category term="SaaS"></category><category term="Redux"></category><category term="Figma"></category></entry><entry><title>Your Blog Post Title</title><link href="/blog/your-blog-post-title/" rel="alternate"></link><published>2024-11-12T00:00:00+01:00</published><updated>2024-11-12T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-12:/blog/your-blog-post-title/</id><content type="html">&lt;p&gt;First post!!!!&lt;/p&gt;</content><category term="blogposts"></category></entry><entry><title>Inner Lighthouse: IOS and Android Self-Reflection App</title><link href="/blog/inner-lighthouse-ios-and-android-self-reflection-app/" rel="alternate"></link><published>2024-11-10T00:00:00+01:00</published><updated>2024-11-10T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-10:/blog/inner-lighthouse-ios-and-android-self-reflection-app/</id><summary type="html">&lt;p&gt;Inner Lighthouse is cross-platform mobile app for daily self-reflection exercises. The app development...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Project details&lt;/h2&gt;
&lt;p&gt;Inner Lighthouse is cross-platform mobile app for daily self-reflection exercises. The app development with itself has brought many technical challenges such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implemented a custom, responsive Duolingo-style journey layout using a tailored sin/cos function, ensuring cross-platform consistency across various mobile screen sizes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Engineered a complex payment system with platform-specific code for Android and iOS, handling diverse local currencies and data extraction intricacies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Designed and implemented a robust architecture prioritizing user privacy, safeguarding identity even in the event of a security breach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Utilized React, Redux+Sagas for state management, with AWS (Lambdas, S3) for backend services. Implemented GraphQL API using Graphene, streamlining data fetching for the React app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Established a microservices architecture with Terraform for deployment, showcasing DevOps proficiency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="projects"></category><category term="Mobile Development"></category><category term="React Native"></category><category term="Expo"></category><category term="GraphQL"></category><category term="Python"></category><category term="Graphene"></category><category term="TypeScript"></category><category term="AWS Lambda"></category><category term="AWS DynamoDB"></category><category term="GPT / OpenAI"></category><category term="Microservices"></category><category term="Redux"></category><category term="Terraform"></category><category term="Figma"></category></entry><entry><title>Legal Code Document Generator</title><link href="/blog/legal-code-document-generator/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:/blog/legal-code-document-generator/</id><summary type="html">&lt;p&gt;Smart Document Generator is a Python framework aimed of transforming legal data into...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Smart Document Generator&lt;/h2&gt;
&lt;p&gt;Open Law Library is a DC-based startup (NGO) aiming to make the law widely accessible to all for free in a high-quality format.&lt;/p&gt;
&lt;p&gt;As this was indeed a complex library, here are some of the key aspects I've faced:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implemented highly optimized recursive algorithms and handlers in Python for XML processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optimized and profiled Python handlers for high-volume data transformation, enabling generation of thousand-page documents&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Employed Test-Driven Development (TDD) to ensure high quality and transformation accuracy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created a Bidirectional XML Transformer with Round-Trip Integrity (&lt;code&gt;XML ↔ DOCX&lt;/code&gt;), synchronizing parser and transformer components, putting high emphasis on data integrity checks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extended python-docx library with custom features adhering to OOXML standard, including support for content controls with public contributions: &lt;a href="https://github.com/openlawlibrary/python-docx"&gt;https://github.com/openlawlibrary/python-docx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As all input data is in the public domain, you can see example: &lt;a href="https://github.com/DCCouncil/law-xml"&gt;https://github.com/DCCouncil/law-xml&lt;/a&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Python"></category><category term="lxml"></category><category term="python-docx"></category><category term="XML"></category><category term="OOXML"></category><category term="LegalTech"></category><category term="Product Design"></category><category term="qrcode"></category></entry><entry><title>Legal Open Data Generator: Enhancing Public Access to Law</title><link href="/blog/legal-open-data-generator-enhancing-public-access-to-law/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:/blog/legal-open-data-generator-enhancing-public-access-to-law/</id><summary type="html">&lt;p&gt;RDF open data generator for legal documents is aimed at improving public access and interconnectedness of legal...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Project overview&lt;/h2&gt;
&lt;p&gt;Developed an RDF open data generator for legal documents, aimed at improving public access and interconnectedness of legal information.&lt;/p&gt;
&lt;h2&gt;Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generated RDF/XML format for optimal compatibility and readability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extended existing ontologies (e.g., Dublin Core Terms) for legal domain specificity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created new ontological terms to accurately represent complex legal concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implemented robust semantic mapping between legal document structures and RDF triples Incorporated document versioning based on publishing dates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validated generated RDF data against custom ontologies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Impact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Enhanced transparency by enabling public tracking of document changes and metadata Improved searchability and interconnectedness of legal documents in the public domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enabled advanced querying and analysis capabilities for legal data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contributed to the broader ecosystem of linked open data in the legal sector&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example repo: &lt;a href="https://github.com/cityofsanmateo/law-rdf"&gt;https://github.com/cityofsanmateo/law-rdf&lt;/a&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Open Data"></category><category term="Semantic Seb"></category><category term="Rdf"></category><category term="Rdf/XML"></category><category term="Vocabulary Schema Design"></category></entry><entry><title>python-docx Library Extension: Tackling Complex OOXML Challenges</title><link href="/blog/python-docx-library-extension-tackling-complex-ooxml-challenges/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:/blog/python-docx-library-extension-tackling-complex-ooxml-challenges/</id><summary type="html">&lt;p&gt;Open source contributions to the most popular library for docx document generation using Python...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Project highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Engineered critical, unsupported features in python-docx, addressing complex document processing needs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implemented advanced functionalities: autonumbering, image handling, paragraph mix-indent, content controls, vector graphics, writing controls, bookmarks, and extended tab stops&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developed all features for general use, significantly expanding library capabilities&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Key Technical Challenges&lt;/h2&gt;
&lt;h3&gt;Recursive Styling System:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implemented a sophisticated recursive algorithm to handle multi-layered style inheritance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Managed complex rule priorities: system defaults, document templates, user styles, and direct paragraph formatting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensured accurate style application in deeply nested document structures&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Autonumbering and List Styles:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Developed intricate logic for handling predefined and custom numbering systems Navigated complex OOXML specifications to ensure standard compliance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance Optimization:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Engineered efficient algorithms for real-time document access and manipulation&lt;/li&gt;
&lt;/ul&gt;</content><category term="projects"></category><category term="python-docx"></category><category term="lxml"></category><category term="OOXML"></category><category term="XML"></category><category term="XSD"></category><category term="Python"></category></entry><entry><title>Enterprise Software Customization Automation</title><link href="/blog/enterprise-software-customization-automation/" rel="alternate"></link><published>2023-03-20T00:00:00+01:00</published><updated>2023-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2023-03-20:/blog/enterprise-software-customization-automation/</id><summary type="html">&lt;p&gt;Worked on implementation of WPF-based code generator for Schneider Electric's WebDMD platform...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Developed and implemented a WPF-based code generator for Schneider Electric's WebDMD platform, automating the creation of 10+ code layers for complex enterprise solutions. Designed an intuitive GUI tool enabling high-level management to perform real-time client customizations, drastically reducing field integration time from weeks to minutes. Contributed to multi-layer code generation, integration features, and ongoing platform maintenance.&lt;/p&gt;
&lt;p&gt;This solution significantly &lt;strong&gt;enhanced scalability, reduced development costs, and improved client satisfaction&lt;/strong&gt;. The tool allowed for rapid customization of multiple fields simultaneously, streamlining enterprise-level modifications and substantially decreasing project turnaround times while maintaining code quality and consistency.&lt;/p&gt;</content><category term="projects"></category><category term="ASP.NET"></category><category term="C#"></category><category term="MS SQL"></category><category term="XML"></category><category term="IIS"></category><category term="SQL Server"></category></entry></feed>