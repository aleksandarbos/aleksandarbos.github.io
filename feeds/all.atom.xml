<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aleksandar Bošnjak's portfolio</title><link href="aleksbuilds.com/" rel="alternate"></link><link href="aleksbuilds.com/feeds/all.atom.xml" rel="self"></link><id>aleksbuilds.com/</id><updated>2024-11-14T00:00:00+01:00</updated><entry><title>Linkter AI: Semantic internal linking</title><link href="aleksbuilds.com/blog/linkter-ai-semantic-internal-linking/" rel="alternate"></link><published>2024-11-14T00:00:00+01:00</published><updated>2024-11-14T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-14:aleksbuilds.com/blog/linkter-ai-semantic-internal-linking/</id><summary type="html">&lt;p&gt;Linkter is an advanced SaaS tool for building internal links within WordPress websites, leveraging cutting-edge AI and NLP technologies...&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Linkter AI Interface" src="aleksbuilds.com/images/linkter.jpeg"&gt;&lt;/p&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;As lead developer of Linkter AI, I built a complete SaaS solution zero -&amp;gt; one which solved the problem of internal linking. At this point it works only with WordPress websites, but we aim of supporting different CMS types such as Webflow, Shopify, Framer and others.&lt;/p&gt;
&lt;h2&gt;Technical Achievements&lt;/h2&gt;
&lt;h3&gt;Cloud Architecture&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Designed and implemented scalable AWS infrastructure using Lambda, Step Functions, and EC2&lt;/li&gt;
&lt;li&gt;Built efficient data processing pipeline handling sites up to 5,000 pages&lt;/li&gt;
&lt;li&gt;Implemented cost-effective parallel processing for multi-site content analysis&lt;/li&gt;
&lt;li&gt;Deployed sophisticated ML models via custom EC2 configurations&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Backend Development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Created Python/Flask microservices architecture&lt;/li&gt;
&lt;li&gt;Implemented secure data handling with Fernet encryption&lt;/li&gt;
&lt;li&gt;Built robust WordPress integration system&lt;/li&gt;
&lt;li&gt;Designed efficient PostgreSQL/DynamoDB hybrid storage solution&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Frontend Implementation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Developed intuitive React/Redux interface reducing cognitive load&lt;/li&gt;
&lt;li&gt;Created custom components for specialized content analysis&lt;/li&gt;
&lt;li&gt;Built real-time preview and suggestion system&lt;/li&gt;
&lt;li&gt;Implemented responsive design supporting all devices&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;WordPress Integration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Developed lightweight plugin supporting complex page builders&lt;/li&gt;
&lt;li&gt;Implemented secure authentication via WP application passwords&lt;/li&gt;
&lt;li&gt;Created automated content synchronization&lt;/li&gt;
&lt;li&gt;Built robust error handling and recovery systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Business Impact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Increased user engagement through improved content discovery&lt;/li&gt;
&lt;li&gt;Enhanced ad revenue via better internal navigation&lt;/li&gt;
&lt;li&gt;Improved search rankings for client target keywords&lt;/li&gt;
&lt;li&gt;Significantly reduced manual linking workload&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Linkter AI Interface" src="aleksbuilds.com/images/linkter/wallpapper-02.jpeg"&gt;&lt;/p&gt;
&lt;h2&gt;Technical Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Frontend:&lt;/strong&gt; React, Redux, TypeScript&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backend:&lt;/strong&gt; Python, Flask, SQLAlchemy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrastructure:&lt;/strong&gt; AWS Lambda, Step Functions, RDS, DynamoDB, EC2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DevOps:&lt;/strong&gt; Terraform, GitHub Actions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design:&lt;/strong&gt; Figma&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AI-powered content analysis&lt;/li&gt;
&lt;li&gt;Three-tier matching system (Exact, Partial, Contextual)&lt;/li&gt;
&lt;li&gt;Real-time link suggestions&lt;/li&gt;
&lt;li&gt;SEO optimization safeguards&lt;/li&gt;
&lt;li&gt;Visual relationship mapping&lt;/li&gt;
&lt;li&gt;Automated content processing&lt;/li&gt;
&lt;li&gt;Secure credential management&lt;/li&gt;
&lt;li&gt;Performance monitoring&lt;/li&gt;
&lt;li&gt;Scalable architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Keyword semantic proximity" src="aleksbuilds.com/images/linkter/graphic-01.png"&gt;&lt;/p&gt;
&lt;h2&gt;Development Process&lt;/h2&gt;
&lt;p&gt;Led end-to-end development from concept to deployment:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Created initial design and wireframes&lt;/li&gt;
&lt;li&gt;Built MVP core functionality&lt;/li&gt;
&lt;li&gt;Implemented cloud infrastructure&lt;/li&gt;
&lt;li&gt;Developed WordPress integration&lt;/li&gt;
&lt;li&gt;Deployed monitoring and scaling systems&lt;/li&gt;
&lt;li&gt;Continuously improved based on user feedback&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;The platform successfully processes thousands of pages across multiple websites, helping content creators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discover relevant internal linking opportunities&lt;/li&gt;
&lt;li&gt;Improve site structure and SEO&lt;/li&gt;
&lt;li&gt;Increase page views and user engagement&lt;/li&gt;
&lt;li&gt;Save significant time on content optimization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Keyword semantic proximity" src="aleksbuilds.com/images/linkter/graphic-02.png"&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Artificial Intelligence"></category><category term="Machine Learning"></category><category term="Pytorch"></category><category term="Python"></category><category term="PostgreSQL"></category><category term="AWS Lambda"></category><category term="AWS RDS"></category><category term="AWS DynamoDB"></category><category term="Flask"></category><category term="Terraform"></category><category term="PythonSQLAlchemy"></category><category term="Microservices"></category><category term="SaaS"></category><category term="Redux"></category><category term="Figma"></category></entry><entry><title>Your Blog Post Title</title><link href="aleksbuilds.com/blog/your-blog-post-title/" rel="alternate"></link><published>2024-11-12T00:00:00+01:00</published><updated>2024-11-12T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-12:aleksbuilds.com/blog/your-blog-post-title/</id><content type="html">&lt;p&gt;First post!!!!&lt;/p&gt;</content><category term="blogposts"></category></entry><entry><title>Inner Lighthouse: IOS and Android Self-Reflection App</title><link href="aleksbuilds.com/blog/inner-lighthouse-ios-and-android-self-reflection-app/" rel="alternate"></link><published>2024-11-10T00:00:00+01:00</published><updated>2024-11-10T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-11-10:aleksbuilds.com/blog/inner-lighthouse-ios-and-android-self-reflection-app/</id><summary type="html">&lt;p&gt;Inner Lighthouse is cross-platform mobile app for daily self-reflection exercises. The app development...&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Inner Lighthouse App Interface" src="aleksbuilds.com/images/inner_lighthouse.png"&gt;&lt;/p&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;Inner Lighthouse is a gamified personal development app that guides users through structured self-discovery and growth journeys. Taking inspiration from language learning apps like Duolingo, it transforms psychological concepts and exercises into engaging daily practices.&lt;/p&gt;
&lt;h2&gt;Development Highlights&lt;/h2&gt;
&lt;h3&gt;Interactive Journey System&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Engineered a custom path-generation algorithm using trigonometric functions to create dynamic, visually appealing progress paths&lt;/li&gt;
&lt;li&gt;Implemented progressive unlock system with real-time progress tracking and achievement notifications&lt;/li&gt;
&lt;li&gt;Built responsive layouts adapting seamlessly across different device dimensions and orientations&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Architecture &amp;amp; Infrastructure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Designed scalable microservices architecture leveraging AWS Lambda, DynamoDB, and S3&lt;/li&gt;
&lt;li&gt;Implemented GraphQL API using Graphene for efficient data fetching and reduced network overhead&lt;/li&gt;
&lt;li&gt;Built secure user authentication system with biometric support and encrypted data storage&lt;/li&gt;
&lt;li&gt;Deployed infrastructure using Terraform with modular configuration for different environments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Inner Lighthouse App Interface" src="aleksbuilds.com/images/inner-lighthouse/wallpapper-02.png"&gt;&lt;/p&gt;
&lt;h3&gt;Platform Integration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Developed cross-platform codebase using React Native and TypeScript&lt;/li&gt;
&lt;li&gt;Integrated platform-specific in-app purchase systems for iOS (StoreKit) and Android (Billing Library)&lt;/li&gt;
&lt;li&gt;Implemented native module bridges for platform-specific features and optimizations&lt;/li&gt;
&lt;li&gt;Built offline support with data synchronization and conflict resolution&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;State Management &amp;amp; Performance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Utilized Redux with Redux-Saga for predictable state management and complex async flows&lt;/li&gt;
&lt;li&gt;Implemented optimistic updates for improved perceived performance&lt;/li&gt;
&lt;li&gt;Built efficient caching system reducing API calls and enabling offline functionality&lt;/li&gt;
&lt;li&gt;Optimized render performance through strategic component memoization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Inner Lighthouse App Interface" src="aleksbuilds.com/images/inner-lighthouse/wallpapper-03.png"&gt;&lt;/p&gt;
&lt;h3&gt;Key Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Progressive journey system with branching paths&lt;/li&gt;
&lt;li&gt;Interactive exercises and reflections&lt;/li&gt;
&lt;li&gt;Achievement and progress tracking&lt;/li&gt;
&lt;li&gt;Offline support with sync&lt;/li&gt;
&lt;li&gt;Cross-platform data persistence&lt;/li&gt;
&lt;li&gt;End-to-end encryption for user data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Technical Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Frontend:&lt;/strong&gt; React Native, TypeScript, Redux, Redux-Saga&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backend:&lt;/strong&gt; Node.js, GraphQL, Graphene&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrastructure:&lt;/strong&gt; AWS Lambda, DynamoDB, S3, CloudFront&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DevOps:&lt;/strong&gt; Terraform, GitHub Actions, Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Future Development&lt;/h2&gt;
&lt;p&gt;Currently working on expanding the platform with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI-powered personalization&lt;/li&gt;
&lt;li&gt;Group journey capabilities&lt;/li&gt;
&lt;li&gt;Enhanced analytics dashboard&lt;/li&gt;
&lt;li&gt;Community features with privacy focus&lt;/li&gt;
&lt;li&gt;Expanded exercise library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Inner Lighthouse App Interface" src="aleksbuilds.com/images/inner-lighthouse/wallpapper-04.jpeg"&gt;&lt;/p&gt;
&lt;h2&gt;Outcome&lt;/h2&gt;
&lt;p&gt;The app successfully launched on both iOS and Android platforms, maintaining a 4.8+ rating on both stores. User engagement metrics show an average session time of 12 minutes with a 40% daily return rate.&lt;/p&gt;
&lt;h3&gt;Download&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://apps.apple.com/us/app/inner-lighthouse/id6473821361"&gt;iOS App Store&lt;/a&gt;  &lt;a href="https://play.google.com/store/apps/details?id=com.twentyeight.innerlighthouse"&gt;Google Play Store&lt;/a&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Mobile Development"></category><category term="React Native"></category><category term="Expo"></category><category term="GraphQL"></category><category term="Python"></category><category term="Graphene"></category><category term="TypeScript"></category><category term="AWS Lambda"></category><category term="AWS DynamoDB"></category><category term="GPT / OpenAI"></category><category term="Microservices"></category><category term="Redux"></category><category term="Terraform"></category><category term="Figma"></category></entry><entry><title>Legal Code Document Generator</title><link href="aleksbuilds.com/blog/legal-code-document-generator/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:aleksbuilds.com/blog/legal-code-document-generator/</id><summary type="html">&lt;p&gt;Smart Document Generator is a Python framework aimed of transforming legal data into...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Smart Document Generator&lt;/h2&gt;
&lt;p&gt;Open Law Library is a DC-based startup (NGO) aiming to make the law widely accessible to all for free in a high-quality format.&lt;/p&gt;
&lt;p&gt;As this was indeed a complex library, here are some of the key aspects I've faced:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implemented highly optimized recursive algorithms and handlers in Python for XML processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optimized and profiled Python handlers for high-volume data transformation, enabling generation of thousand-page documents&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Employed Test-Driven Development (TDD) to ensure high quality and transformation accuracy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created a Bidirectional XML Transformer with Round-Trip Integrity (&lt;code&gt;XML ↔ DOCX&lt;/code&gt;), synchronizing parser and transformer components, putting high emphasis on data integrity checks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extended python-docx library with custom features adhering to OOXML standard, including support for content controls with public contributions: &lt;a href="https://github.com/openlawlibrary/python-docx"&gt;https://github.com/openlawlibrary/python-docx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As all input data is in the public domain, you can see example: &lt;a href="https://github.com/DCCouncil/law-xml"&gt;https://github.com/DCCouncil/law-xml&lt;/a&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Python"></category><category term="lxml"></category><category term="python-docx"></category><category term="XML"></category><category term="OOXML"></category><category term="LegalTech"></category><category term="Product Design"></category><category term="qrcode"></category></entry><entry><title>Legal Open Data Generator: Enhancing Public Access to Law</title><link href="aleksbuilds.com/blog/legal-open-data-generator-enhancing-public-access-to-law/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:aleksbuilds.com/blog/legal-open-data-generator-enhancing-public-access-to-law/</id><summary type="html">&lt;p&gt;RDF open data generator for legal documents is aimed at improving public access and interconnectedness of legal...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Project overview&lt;/h2&gt;
&lt;p&gt;Developed an RDF open data generator for legal documents, aimed at improving public access and interconnectedness of legal information.&lt;/p&gt;
&lt;h2&gt;Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generated RDF/XML format for optimal compatibility and readability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extended existing ontologies (e.g., Dublin Core Terms) for legal domain specificity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created new ontological terms to accurately represent complex legal concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implemented robust semantic mapping between legal document structures and RDF triples Incorporated document versioning based on publishing dates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validated generated RDF data against custom ontologies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Impact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Enhanced transparency by enabling public tracking of document changes and metadata Improved searchability and interconnectedness of legal documents in the public domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enabled advanced querying and analysis capabilities for legal data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contributed to the broader ecosystem of linked open data in the legal sector&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example repo: &lt;a href="https://github.com/cityofsanmateo/law-rdf"&gt;https://github.com/cityofsanmateo/law-rdf&lt;/a&gt;&lt;/p&gt;</content><category term="projects"></category><category term="Open Data"></category><category term="Semantic Seb"></category><category term="Rdf"></category><category term="Rdf/XML"></category><category term="Vocabulary Schema Design"></category></entry><entry><title>python-docx Library Extension: Tackling Complex OOXML Challenges</title><link href="aleksbuilds.com/blog/python-docx-library-extension-tackling-complex-ooxml-challenges/" rel="alternate"></link><published>2024-03-20T00:00:00+01:00</published><updated>2024-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2024-03-20:aleksbuilds.com/blog/python-docx-library-extension-tackling-complex-ooxml-challenges/</id><summary type="html">&lt;p&gt;Open source contributions to the most popular library for docx document generation using Python...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Project highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Engineered critical, unsupported features in python-docx, addressing complex document processing needs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implemented advanced functionalities: autonumbering, image handling, paragraph mix-indent, content controls, vector graphics, writing controls, bookmarks, and extended tab stops&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developed all features for general use, significantly expanding library capabilities&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Key Technical Challenges&lt;/h2&gt;
&lt;h3&gt;Recursive Styling System:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implemented a sophisticated recursive algorithm to handle multi-layered style inheritance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Managed complex rule priorities: system defaults, document templates, user styles, and direct paragraph formatting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensured accurate style application in deeply nested document structures&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Autonumbering and List Styles:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Developed intricate logic for handling predefined and custom numbering systems Navigated complex OOXML specifications to ensure standard compliance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance Optimization:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Engineered efficient algorithms for real-time document access and manipulation&lt;/li&gt;
&lt;/ul&gt;</content><category term="projects"></category><category term="python-docx"></category><category term="lxml"></category><category term="OOXML"></category><category term="XML"></category><category term="XSD"></category><category term="Python"></category></entry><entry><title>Enterprise Software Customization Automation</title><link href="aleksbuilds.com/blog/enterprise-software-customization-automation/" rel="alternate"></link><published>2023-03-20T00:00:00+01:00</published><updated>2023-03-20T00:00:00+01:00</updated><author><name>Aleksandar Bošnjak</name></author><id>tag:None,2023-03-20:aleksbuilds.com/blog/enterprise-software-customization-automation/</id><summary type="html">&lt;p&gt;Worked on implementation of WPF-based code generator for Schneider Electric's WebDMD platform...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Developed and implemented a WPF-based code generator for Schneider Electric's WebDMD platform, automating the creation of 10+ code layers for complex enterprise solutions. Designed an intuitive GUI tool enabling high-level management to perform real-time client customizations, drastically reducing field integration time from weeks to minutes. Contributed to multi-layer code generation, integration features, and ongoing platform maintenance.&lt;/p&gt;
&lt;p&gt;This solution significantly &lt;strong&gt;enhanced scalability, reduced development costs, and improved client satisfaction&lt;/strong&gt;. The tool allowed for rapid customization of multiple fields simultaneously, streamlining enterprise-level modifications and substantially decreasing project turnaround times while maintaining code quality and consistency.&lt;/p&gt;</content><category term="projects"></category><category term="ASP.NET"></category><category term="C#"></category><category term="MS SQL"></category><category term="XML"></category><category term="IIS"></category><category term="SQL Server"></category></entry></feed>